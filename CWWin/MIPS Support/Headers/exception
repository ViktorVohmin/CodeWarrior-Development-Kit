/************************************************************************/
/*	Project...:	Standard C++ Library									*/
/*	Name......:	exception												*/
/*	Purpose...:	exception handling										*/
/*  Copyright.: ©Copyright 1993-95 by metrowerks inc					*/
/************************************************************************/

#ifndef _EXCEPTION_
#define _EXCEPTION_

#ifndef _STDEXCEPT_
#include <stdexcept>
#endif

#if __MWERKS__
#pragma options align=mac68k
#pragma direct_destruction on
#endif

class bad_exception : public exception {
public:
	bad_exception() throw() {}
	bad_exception(const bad_exception&) throw() {}
	bad_exception& operator=(const bad_exception&) throw() { return *this; }
//	virtual ~bad_exception() throw();
	virtual const char* what() const /*throw()*/;
};

typedef void (*terminate_handler)();
terminate_handler set_terminate(terminate_handler);
void terminate();

typedef void (*unexpected_handler)();
unexpected_handler set_unexpected(unexpected_handler);
void unexpected();

#if __MWERKS__
#pragma options align=reset
#pragma direct_destruction reset
#endif

#endif
